#!/bin/bash

function new_board() {
    if [[ -z $1 ]]; then
        error_handler "notes: missing board name"
    fi
    
    ensure_board_does_not_exist "$1"
    echo -e "<board>$1\n</board>" >> ~/.notes
}

function delete_board() {
    if [[ -z $1 ]]; then
        error_handler "notes: missing board name"
    fi
    
    ensure_board_exists "$1"
    sed -i "/<board>$1$/,/<\/board>/d" ~/.notes
}

function stick() {
    if [[ -z $1 ]]; then
        error_handler "notes: missing args\nusage: 'notes --stick <board name> <note name> <note description>'"
    fi

    if [[ -z $2 ]]; then
        error_handler "notes: missing note name and description\nusage: 'notes --stick <board name> <note name> <note description>'"
    fi

    if [[ -z $3 ]]; then
        error_handler "notes: missing note description\nusage: 'notes --stick <board name> <note name> <note description>'"
    fi

    ensure_note_file_exists
    ensure_board_exists "$1"
    ensure_note_does_not_exist "$1" "$2"

    sed -i "/<board>$1$/,/<\/board>/s|</board>|<name>$2<\/name> <desc>$3<\/desc>\n</board>|" ~/.notes

    echo -e "note $2 has been successfully added to \033[1m$1\033[0m"
}

function remove() {
    if [[ -z $1 ]]; then
        error_handler "notes: missing board name\nusage: 'notes --remove <board name> <note name>'"
    fi

    if [[ -z $2 ]]; then
        error_handler "notes: missing note name\nusage: 'notes --remove <board name> <note name>'"
    fi

    ensure_note_exists "$1" "$2"

    sed -i "/<board>$1$/,/<\/board>/ { /<name>$2<\/name>/d }" ~/.notes

    echo "note '$1' has been successfully removed"
}

function display_boards() {
    echo "Current boards:"
    echo
    sed -n "s|.*<board>\(.*\)|• \x1b[1m\1\x1b[0m|p" ~/.notes
    echo
}

function show() {
    if [[ -z $1 ]]; then
        echo "Current notes:"
        echo
        sed -n "s|.*<name>\(.*\)</name>.*<desc>\(.*\)</desc>.*|• \x1b[1m\1\x1b[0m: \2|p" ~/.notes
    else
        echo
        sed -n "s|.*<name>$1</name>.*<desc>\(.*\)</desc>.*|• \x1b[1m$1\x1b[0m: \1|p" ~/.notes
    fi

    echo
}

function help() {
    echo "Sticky Notes"
    echo
    echo "Your notes consist of boards. Each board contains sticky notes"
    echo "that have a name and a description"
    echo
    echo "Usage: notes [OPTION]...{args}"
    echo
    echo "  -n, --stick"
    echo "      sticks a new note on a board"
    echo "      notes --stick <note name>"
    echo
    echo "  -r, --remove"
    echo "      removes an existing note"
    echo "      notes --remove <note name>"
    echo
    echo "  -s, --show"
    echo "      displays existing notes"
    echo "      notes --show              {shows all notes}"
    echo "      notes --show <note name>  {shows single note}"
    echo
}

function ensure_note_file_exists() {
    if [[ ! -f "~/.notes" ]]; then
        touch ~/.notes
    fi
}

function ensure_board_exists() {
    output=$(grep -x "<board>$1" ~/.notes)
    if [[ -z $output ]]; then
        error_handler "notes: a board named '$1' does not exist"
    fi
}

function ensure_board_does_not_exist() {
    output=$(grep -x "<board>$1" ~/.notes)
    if [[ -n $output ]]; then
        error_handler "notes: a board named '$1' already exists"
    fi
}

function ensure_note_exists() {
    output=$(sed -n "/<board>$1$/,/<\/board>/p" ~/.notes | grep "<name>$2</name>")
    if [[ -z $output ]]; then
        error_handler "notes: a note named '$2' does not exist"
    fi
}

function ensure_note_does_not_exist() {
    output=$(sed -n "/<board>$1$/,/<\/board>/p" ~/.notes | grep "<name>$2</name>")
    if [[ -n $output ]]; then
        error_handler "notes: a note named '$2' already exists in board '$1'"
    fi
}

function error_handler() {
    echo -e "$1"
    exit 1
}

if [[ -n $1 ]]; then
    case "$1" in
        --newboard)
            new_board "$2"
            ;;
        --deleteboard)
            delete_board "$2"
            ;;
        --displayboards)
            display_boards
            ;;
        -n|--stick)
            stick "$2" "$3" "$4"
            ;;
        -r|--remove)
            remove "$2" "$3"
            ;;
        -s|--show)
            show "$2"
            ;;
        -h|--help)
            help
            ;;
        *)
            error_handler "notes: unrecognized option '$1'\nTry 'notes --help' for more information."
            ;;
    esac
else
    help
fi
